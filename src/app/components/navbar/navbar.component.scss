.example-spacer {
  flex: 1 1 auto;
}

.header {
  background: white;

  nav {
    display: flex;
    flex-direction: row;
  }
}

div {
  display: flex;
  flex-direction: row;
  gap: 1rem;
}

.icon {
  color: var(--color-primary);
  background: transparent;
}

.mat-toolbar-row,
.mat-toolbar-single-row {
  display: flex;
  box-sizing: border-box;
  padding: 1rem 5rem;
  width: 100%;
  flex-direction: row;
  align-items: center;
  white-space: nowrap;
  height: var(--mat-toolbar-standard-height);
}

.mat-drawer-content {
  padding: 1rem;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.example-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}

h1.example-app-name {
  margin-left: 8px;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
     `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}

@media screen and (max-width: 600px) {
  .example-is-mobile .example-sidenav-container {
    flex: 1;
  }

  .mat-toolbar-row,
  .mat-toolbar-single-row {
    padding: 1rem 2rem;
    justify-content: space-between;
  }

}